---
- name: Install necessary packges
  apt:
    name: "{{ pkgs }}"
    state: latest
    update_cache: yes
  become: true

- name: Install Snap packages
  snap:
    name: "{{ snaps }}"
    classic: yes
  become: true

- name: Install PyPI packages
  pip:
    name: "{{ pypi }}"
    state: present
    executable: "pip3"

- name: Download scripts
  get_url:
    url: "{{ item.value }}"
    dest: "/tmp/{{ item.key }}.sh"
    mode: "0776"
  loop: "{{ lookup('dict', scripts) }}"

- name: Run scripts
  command: "/tmp/{{ item.key }}.sh"
  environment:
    CHANNEL: stable
  become: yes
  loop: "{{ lookup('dict', scripts) }}"

- name: Ensure Docker is started.
  service:
    name: docker
    state: started
    enabled: true

- name: Ensure docker users are added to the docker group
  user:
    name: "{{ run_user }}"
    groups: docker
    append: true
  become: true

- name: Create docker networks
  docker_network:
    name: "{{ item }}"
  with_items:
    - front-tier
    - back-tier

- name: Create {{ container_user }} with gid 1750
  group:
    name: "{{ container_user }}"
    state: present
    gid: 1750
  become: yes

- name: Create {{ container_user }} with gid 1750
  user:
    name: "{{ container_user }}"
    groups: "{{ container_user }}"
    append: yes
    state: present
    uid: 1750
    createhome: no
  become: yes

- name: Create temporary bettercap build directory
  tempfile:
    state: directory
    suffix: build
  register: tempdir

- name: Build bettercap
  shell: |
    go env -w GO111MODULE=off
    go get -u github.com/bettercap/bettercap
    ls -lah
  args:
    chdir: "{{ tempdir.path }}"

- name: Install bettercap
  shell: |
    mv {{ tempdir.path }}/go/bin/bettercap /usr/local/bin/
    rm -rf {{ tempdir.path }}
    bettercap -version
  become: yes
  register: output

- name: Display bettercap version
  debug:
    msg: "{{ output.stdout }}"
  when: output.rc == 0

- name: Install bettercap caplets
  shell: bettercap -eval "caplets.update; ui.update; q"
  when: output.rc == 0
  ignore_errors: true
  become: true
